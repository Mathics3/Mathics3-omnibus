FROM ubuntu:noble

ENV MATHICS_HOME=/usr/src/app

ENV ASY_VERSION=asymptote-2.87
ENV MATHICS3_MODULE_OPTION="--load-module pymathics.graph,pymathics.natlang"

ENV ENTRYPOINT_COMMAND="docker run -it {MATHICS_IMAGE}"
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
WORKDIR $MATHICS_HOME

COPY requirements.txt ./
RUN apt-get update
RUN apt-get install -qq apt-utils
RUN apt-get install -qq software-properties-common wget
RUN add-apt-repository ppa:deadsnakes/ppa

RUN apt-get update -y && apt-get upgrade -y -qq

# noble usually runs Python 3.12, but we only support up to
# Python 3.11
ENV PYTHON=python3.11
RUN apt-get install -y -qq \
    ${PYTHON} ${PYTHON}-dev ${PYTHON}-distutils

RUN wget https://bootstrap.pypa.io/get-pip.py
RUN ${PYTHON} ./get-pip.py

ENV PIP=/usr/local/bin/pip3.11

# we need libsqlite3-dev now if ubuntu doesn't come with that, we'll need
# to build our own Python
# Leave out inkscape  for now.

# inxi and mesa-utils might be optional
# npm pulls in nodejs, but we'll be explicit.

# Install lots of packages
RUN apt-get install -y -qq \
    cargo \
    evince \
    gfortran \
    git x11-apps \
    gyp \
    latexmk texlive-xetex texlive-fonts-extra texlive-fonts-extra-links \
    libffi8 \
    libgl1-mesa-dri \
    liblapack-dev \
    libmysqlclient-dev \
    libopenblas-dev \
    libxml2-dev \
    libxcb-cursor-dev \
    libxslt1-dev \
    llvm-18 \
    llvm-18-dev \
    lmodern texlive-latex-extra \
    maria \
    mesa-utils \
    nodejs \
    npm \
    pkg-config \
    rustc \
    sqlite3 \
    texlive-fonts-recommended \
    tk8.6-blt2.5 \
    xserver-xorg-video-all

# to make docker layers be more usuable in development
# defer deletion until close to the end
# RUN rm -fr /tmp*_amd64.deb

RUN $PYTHON -m pip install --upgrade pip
RUN $PIP install --no-cache-dir -r requirements.txt

################
# Mathics core #
################
# RUN $PIP install git+https://github.com/Mathics3/mathics-core.git#egg=Mathics3[full]
# RUN pip install "Mathics3[full]>=7.0.0"

RUN apt-get install -y -qq librsvg2-bin pyqt5-dev-tools

# We need newer versions of Asymptote and GhostScript for bulding the PDF
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y -qq freeglut3-dev libfftw3-double3 libglew2.2 libsigsegv2 ghostscript imagemagick texlive-pstricks
COPY ubuntu-bin/gs /usr/local/bin/

#--
# build new version of Asymptote for our docs and for inside mathicsscript. The Ubuntu-distributed asymptote has bugs.
#--
RUN apt-get install -y -qq \
  autoconf \
  asymptote \
  bison \
  file \
  flex \
  freeglut3-dev \
  libcurl3-gnutls \
  libcurl4 \
  libcurl4 \
  libcurl4-gnutls-dev \
  libgc-dev \
  libgl-dev \
  libglm-dev \
  libreadline-dev \
  libsigsegv2 \
  texinfo

# COPY src/${ASY_VERSION}.src.tgz .
# RUN tar -xpf ${ASY_VERSION}.src.tgz
# RUN (cd ${ASY_VERSION} && bash ./autogen.sh && ./configure --disable-lsp && make -j3 all && make -j3 install)

RUN git clone https://github.com/Mathics3/mathics-core.git
ENV DATA_DIR=/usr/src/app/mathics-core/mathics/doc/latex/
ENV DOCTEST_LATEX_DATA_PCL=/usr/src/app/mathics-core/mathics/doc/latex/doctext_latex_data.pcl
ENV DOCTEST_USER_HTML_DATA_PATH=/usr/src/app/mathics-core/mathics/doc/doc_html_data.pcl

COPY tex-images/*.pdf mathics-core/mathics/doc/latex/
ENV DOC_LATEX_FILE=/usr/src/app/mathics-core/mathics/doc/latex/documentation.tex
# COPY src/documentation.tex mathics-core/mathics/doc/latex/documentation.tex
# COPY src/version-info.tex mathics-core/mathics/doc/latex/

RUN $PIP install -U 'numpy<1.27' SciPy scikit-image

RUN (cd mathics-core && $PIP install -e .[full])
RUN (cd mathics-core && bash ./admin-tools/make-op-tables.sh)

####################################################
# Mathics Pymathics and Pymathics Graph for Django #

RUN $PIP install -e git+https://github.com/Mathics3/pymathics-graph#egg=pymathics-graph
# RUN $PIP install "pymathics-graph>=7.0.0"

RUN $PIP install -e git+https://github.com/Mathics3/pymathics-natlang#egg=pymathics-natlang
# RUN $PIP install "pymathics-natlang>=7.0.0"

RUN $PIP install spacy
RUN $PYTHON -m spacy download en_core_web_sm
RUN $PIP install nltk
RUN $PYTHON -m nltk.downloader wordnet omw-1.4

# This is a mess. Figure out how to make doc.
COPY src/mathics.pdf mathics-core/mathics/doc/latex/mathics.pdf
# RUN (cd mathics-core/mathics/doc/latex && PYTHON=$PYTHON make mathics.pdf) || /bin/true
##################
# Mathics Django #
##################
RUN git clone https://github.com/Mathics3/mathics-django.git
RUN (cd mathics-django && $PIP install -e .[full])
# Get threejs version created
RUN (cd mathics-django && make build)

# RUN $PYTHON -m pip install -e git+https://github.com/Mathics3/mathics-django#egg=Mathics-Django[full]
# RUN $PYTHON -m pip install "Mathics-Django[full]>=7.0.0"

RUN (cd mathics-django && PIP=$PIP make)
RUN (cd mathics-django && make doctest-data) || true
# RUN mkdir -p /usr/src/app/.local/var/mathics && mv -v mathics-core/mathics/doc/doc_html_data.pcl /usr/src/app/.local/var/mathics/doc_data_html.pcl

##################
# Mathicsscript  #
##################

COPY requirements-mathicsscript.txt ./
RUN $PIP install --no-cache-dir -r requirements-mathicsscript.txt
RUN git clone https://github.com/Mathics3/mathicsscript.git

# prompt toolkit needs an IPython that is newer than what got
# implicitly installed above
RUN ${PYTHON} -m pip install 'ipython>=7.23.1'

# RUN ${PYTHON} -m pip install mathicsscript[full]
RUN ${PYTHON} -m pip install -e git+https://github.com/Mathics3/mathicsscript#egg=mathicsscript[full]
RUN (cd src/mathicsscript && make)

##################
# debug stuff    #
##################
RUN apt-get install -y -qq emacs
RUN pip install trepan3k
# RUN pip install remake

##################
# Finish up      #
##################

# Cleanup
RUN rm -fr /tmp*_amd64.deb /tmp/*.whl || true

COPY entrypoint.sh /usr/local/bin/mathics-omnibus.sh
RUN chmod +x /usr/local/bin/mathics-omnibus.sh

EXPOSE 8000

# RUN groupadd mathics && \
#     useradd -d $MATHICS_HOME -g mathics -m -s /bin/bash mathics && \
#     mkdir -p $MATHICS_HOME/data && mkdir $MATHICS_HOME/.config/mathicsscript -p && \
#     chown -vR mathics:mathics $MATHICS_HOME

COPY django-db/mathics.sqlite /usr/src/app/.local/var/mathics/mathics.sqlite
RUN chown -vR ubuntu:ubuntu /usr/src/app/.local/var/mathics/

USER ubuntu

ENTRYPOINT ["/usr/local/bin/mathics-omnibus.sh"]

CMD ["--help"]
