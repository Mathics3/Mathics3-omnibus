FROM python:3.8-buster

ENV MATHICS_HOME=/usr/src/app
ENV ENTRYPOINT_COMMAND="docker run -it {MATHICS_IMAGE}"

WORKDIR $MATHICS_HOME

COPY entrypoint.sh /
RUN chmod +x /entrypoint.sh

COPY requirements.txt ./
RUN apt-get update
RUN apt-get install -qq apt-utils
# we need libsqlite3-dev now if ubuntu doesn't come with that, we'll need
# to build our own Python
RUN apt-get install -qq liblapack-dev llvm-dev gfortran maria sqlite3
RUN pip install --no-cache-dir -r requirements.txt
COPY requirements-mathicsscript.txt ./
RUN pip install --no-cache-dir -r requirements-mathicsscript.txt

RUN pip install git+git://github.com/mathics/Mathics.git#egg=Mathics3
RUN python -m pip install -e git://github.com/Mathics3/mathics-django#egg=Mathics-Django
RUN pip install pymathics-natlang
RUN pip install pymathics-graph
RUN (cd src/mathics-django && python mathics_django/test.py -o)
RUN mkdir -p /usr/src/app/.local/var/mathics && cp -v /root/.local/var/mathics/doc_xml_data.pcl /usr/src/app/.local/var/mathics/doc_xml_data.pcl

RUN python -m pip install -e git://github.com/Mathics3/mathicsscript#egg=mathicsscript
RUN (cd src/mathicsscript && make)
# RUN pip install mathicsscript

RUN python -m nltk.downloader wordnet omw
RUN python -m spacy download en

EXPOSE 8000

RUN groupadd mathics && \
    useradd -d $MATHICS_HOME -g mathics -m -s /bin/bash mathics && \
    mkdir -p $MATHICS_HOME/data && \
    chown -R mathics:mathics $MATHICS_HOME

USER mathics
COPY django-db/mathics.sqlite /usr/src/app/.local/var/mathics/mathics.sqlite

ENTRYPOINT ["/entrypoint.sh"]

CMD ["--help"]
